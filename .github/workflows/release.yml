name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [linux, macos, windows]
        config: [release]
        platform: [x64, aarch64]
        test-category: [smoke]
        include:
          - {os: linux, runs-on: ubuntu-20.04, compiler: gcc}
          - {os: windows, runs-on: windows-latest, compiler: cl}
          - {os: macos, runs-on: macos-latest, compiler: clang}
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
          fetch-depth: '0'
      - name: Setup
        uses: ./.github/actions/common-setup
        with:
          os: ${{matrix.os}}
          compiler: ${{matrix.compiler}}
          platform: ${{matrix.platform}}
          config: ${{matrix.config}}
      - name: Build Slang
        id: build
        run: |
          if [[ "${{ matrix.os }}" =~ "windows" && "${{ matrix.config }}" != "release" ]]; then
            # Doing a debug build will try to link against a release built llvm, this
            # is a problem on Windows, so make slang-llvm in release build and use
            # that as though it's a fetched binary via these presets.
            cmake --workflow --preset slang-llvm
            # Configure, pointing to our just-generated slang-llvm archive
            cmake --preset default --fresh \
              -DSLANG_SLANG_LLVM_FLAVOR=FETCH_BINARY \
              -DSLANG_SLANG_LLVM_BINARY_URL=$(pwd)/build/dist-release/slang-slang-llvm.zip \
              -DSLANG_ENABLE_EXAMPLES=OFF \
              -DCMAKE_COMPILE_WARNING_AS_ERROR=${{matrix.warnings-as-errors}}
            cmake --workflow --preset "${{matrix.config}}"
          else
            # Otherwise, use the system llvm we have just build or got from the
            # cache in the setup phase
            cmake --preset default --fresh \
              -DSLANG_SLANG_LLVM_FLAVOR=USE_SYSTEM_LLVM \
              -DSLANG_ENABLE_EXAMPLES=OFF \
              -DCMAKE_COMPILE_WARNING_AS_ERROR=${{matrix.warnings-as-errors}}
            cmake --workflow --preset "${{matrix.config}}"
          fi

          # For the release, also generate a tar.gz file
          cpack --preset release  -G TGZ

          triggering_ref=${{ github.ref_name }}
          version=${triggering_ref#v}
          os_name=${{ matrix.os }}
          arch_name=${{ matrix.platform }}
          arch_name=${arch_name/x64/x86_64}
          base=$(pwd)/slang-${version}-${os_name}-${arch_name}

          mv "$(pwd)/build/dist-${config}/slang.zip" "${base}.zip"
          echo "SLANG_BINARY_ARCHIVE_ZIP=${base}.zip" >> $GITHUB_OUTPUT

          mv "$(pwd)/build/dist-${config}/slang.tar.gz" "${base}.tar.gz"
          echo "SLANG_BINARY_ARCHIVE_TAR=${base}.tar.gz" >> $GITHUB_OUTPUT
      - name: UploadBinary
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.build.outputs.SLANG_BINARY_ARCHIVE_ZIP }}
            ${{ steps.build.outputs.SLANG_BINARY_ARCHIVE_TAR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
